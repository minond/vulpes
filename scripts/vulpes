#!/bin/bash

#==============================================================================
#         FILE: vulpes
#        USAGE: see usage function
#==============================================================================
cmd=$1

#=== FUNCTION =================================================================
#        NAME: usage
#==============================================================================
usage() {
    echo 'usage: vulpes <command> [<args>]'
    echo
    echo 'commands:'
    echo '  create  # create a new application'
    echo '  start   # start an application server'
}

#=== FUNCTION =================================================================
#        NAME: cmd_start
# DESCRIPTION: starts a vulpes app
#==============================================================================
cmd_start() {
    if [ -f node_modules/vulpes/scripts/server.js ]; then
        NODE_PATH=`pwd`/node_modules/ node node_modules/vulpes/scripts/server.js
    else
        echo "does not appear to be a vulpes app."
        echo "if it is, did you run npm install?"
        exit 1
    fi
}

#=== FUNCTION =================================================================
#        NAME: cmd_create
# DESCRIPTION: creates a new vulpes application
# PARAMETER 1: app
#==============================================================================
cmd_create() {
    app=$1

    if [ -d $app ]; then
        echo "$app already exists"
        exit 1
    fi

    echo "=> creating $app"
    mkdir $app
    cd $app

    echo "=> initializing git repo"
    git init &> /dev/null
    cat > .gitignore << 'EOF'
/build/
/node_modules/
EOF

    echo "=> creating directory structure"

    # app
    mkdir app
    mkdir app/controllers
    cat > app/controllers/home.js << 'EOF'
'use strict';

var Home = {};

Home.index = function ($cb, $res) {
    $res.end('hello, from the home controller');
    $cb();
};

module.exports = Home;
EOF

    mkdir config
    cat > config/routes.yml << EOF
/public/(.+):
  dir: ./public

/:
  controller: Home
  action: index
EOF


    # public
    mkdir -p public/views
    mkdir -p public/resources/js
    mkdir -p public/resources/css

    mkdir -p tests/unit/backend/controllers
    cat > tests/unit/backend/controllers/home_test.js << EOF
describe('home controller', function () {
    'use strict';

    var expect, Home;

    beforeEach(function () {
        expect = require('expect.js');
        Home = require('../../../../app/controllers/home');
    });

    describe('loading the module', function () {
        it('should be an object', function () {
            expect(Home).to.be.an(Object);
        });
    });
});
EOF

    echo -n "=> installing vulpes"
    touch package.json
    cat > package.json << EOF
{
  "name": "$app",
  "version": "0.0.0",
  "dependencies": {
  }
}
EOF

    npm install https://github.com/minond/vulpes/tarball/master --save &> /dev/null
    echo

    echo "=> installing build tools"
    mkdir -p vendor/minond
    git submodule add http://github.com/minond/scaffold vendor/minond/scaffold &> /dev/null
    cat > config/build.yml << EOF
type: js
EOF

    echo -n "=> installing grunt tasks"
    npm install lodash@~2.4.1 --save-dev &> /dev/null
    npm install grunt@~0.4.2 --save-dev &> /dev/null
    npm install grunt-complexity@~0.1.3 --save-dev &> /dev/null
    npm install grunt-contrib-jasmine@~0.5.2 --save-dev &> /dev/null
    npm install grunt-contrib-jshint@~0.7.2 --save-dev &> /dev/null
    npm install grunt-contrib-yuidoc@~0.5.0 --save-dev &> /dev/null
    npm install grunt-mkdir@~0.1.1 --save-dev &> /dev/null
    npm install grunt-rm@0.0.4 --save-dev &> /dev/null
    npm install grunt-exec@~0.4.5 --save-dev &> /dev/null
    npm install load-grunt-tasks@~0.4.0 --save-dev &> /dev/null
    npm install glob@~3.2.9 --save-dev &> /dev/null
    npm install merge-defaults@~0.1.0 --save-dev &> /dev/null
    npm install grunt-htmlhint@~0.4.0 --save-dev &> /dev/null
    npm install json5@~0.2.0 --save-dev &> /dev/null
    npm install expect.js@~0.3.1 --save-dev &> /dev/null
    npm install mocha@~1.18.2 --save-dev &> /dev/null
    npm install istanbul@~0.2.7 --save-dev &> /dev/null
    npm install grunt-apidoc@~0.4.0 --save-dev &> /dev/null
    npm install grunt-contrib-clean@~0.5.0 --save-dev &> /dev/null
    npm install grunt-spell@~0.2.1 --save-dev &> /dev/null
    echo

    echo "=> using standard grunt file"
    cp vendor/minond/scaffold/grunt/Gruntfile.js ./
}

case "$cmd" in
    create) cmd_create $2 ;;
    start) cmd_start ;;
    -h) usage ;;
    *|-h) usage; exit 1 ;;
esac
